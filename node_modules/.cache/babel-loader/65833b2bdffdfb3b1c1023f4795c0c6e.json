{"ast":null,"code":"import { orderByRating } from \"./actions\";\nimport { GET_ALL_VIDEOGAMES, GET_GENRES, GET_VIDEOGAME_BY_NAME, FILTER_BY_GENRES, FILTER_BY_LOCATION, ORDER_BY_NAME, ORDER_BY_RATING } from \"./actionTypes\";\nconst initialState = {\n  videogames: [],\n  allVideogames: [],\n  genres: []\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case GET_ALL_VIDEOGAMES:\n      return {\n        ...state,\n        videogames: [...state.allVideogames, payload],\n        allVideogames: [...state.allVideogames, payload]\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        genres: payload\n      };\n    case GET_VIDEOGAME_BY_NAME:\n      return {\n        ...state,\n        videogames: [payload]\n      };\n    case ORDER_BY_NAME:\n      return {\n        ...state,\n        videogames: state.videogames.sort((x, y) => x.name.localeCompare(y.name))\n      };\n    // browsers.sort((x, y) => x.name.localeCompare(y.name))\n    case ORDER_BY_RATING:\n      return {\n        ...state,\n        videogames: state.videogames.sort((x, y) => x.rating - y.rating)\n        // browsers.sort((x, y) => x.year - y.year);\n      };\n\n    case FILTER_BY_GENRES:\n      return {\n        ...state,\n        videogames: state.allVideogames.filter(videogame => {\n          const result = videogame.genres.map(genre => genre === payload);\n          if (result.length) return videogame;else return null;\n        })\n      };\n    case FILTER_BY_LOCATION:\n    default:\n      return {\n        ...state\n      };\n  }\n}","map":{"version":3,"names":["orderByRating","GET_ALL_VIDEOGAMES","GET_GENRES","GET_VIDEOGAME_BY_NAME","FILTER_BY_GENRES","FILTER_BY_LOCATION","ORDER_BY_NAME","ORDER_BY_RATING","initialState","videogames","allVideogames","genres","reducer","state","arguments","length","undefined","type","payload","sort","x","y","name","localeCompare","rating","filter","videogame","result","map","genre"],"sources":["C:/Users/Gonzalo/Desktop/PI-Videogames-main/PI-Videogames-main/client/src/redux/reducer.js"],"sourcesContent":["import { orderByRating } from \"./actions\"\r\nimport {\r\n    GET_ALL_VIDEOGAMES,\r\n    GET_GENRES,\r\n    GET_VIDEOGAME_BY_NAME,\r\n    FILTER_BY_GENRES,\r\n    FILTER_BY_LOCATION,\r\n    ORDER_BY_NAME,\r\n    ORDER_BY_RATING\r\n} from \"./actionTypes\"\r\n\r\nconst initialState = {\r\n    videogames: [],\r\n    allVideogames: [],\r\n    genres: []\r\n}\r\n\r\nexport default function reducer(state = initialState, { type, payload }) {\r\n    switch (type) {\r\n        case GET_ALL_VIDEOGAMES:\r\n            return {\r\n                ...state,\r\n                videogames: [...state.allVideogames, payload],\r\n                allVideogames: [...state.allVideogames, payload]\r\n            }\r\n        case GET_GENRES:\r\n            return {\r\n                ...state,\r\n                genres: payload\r\n            }\r\n        case GET_VIDEOGAME_BY_NAME:\r\n            return {\r\n                ...state,\r\n                videogames: [payload]\r\n            }\r\n        case ORDER_BY_NAME:\r\n            return {\r\n                ...state,\r\n                videogames: state.videogames.sort((x, y) => x.name.localeCompare(y.name))\r\n            }\r\n        // browsers.sort((x, y) => x.name.localeCompare(y.name))\r\n        case ORDER_BY_RATING:\r\n            return {\r\n                ...state,\r\n                videogames: state.videogames.sort((x, y) => x.rating - y.rating)\r\n                // browsers.sort((x, y) => x.year - y.year);\r\n            }\r\n        case FILTER_BY_GENRES:\r\n            return {\r\n                ...state,\r\n                videogames: state.allVideogames.filter(videogame => {\r\n                    const result = videogame.genres.map(genre => genre === payload)\r\n                    if(result.length) return videogame;\r\n                    else return null;\r\n                })\r\n            }\r\n        case FILTER_BY_LOCATION:\r\n                   \r\n\r\n        default:\r\n            return { ...state }\r\n    }\r\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,WAAW;AACzC,SACIC,kBAAkB,EAClBC,UAAU,EACVC,qBAAqB,EACrBC,gBAAgB,EAChBC,kBAAkB,EAClBC,aAAa,EACbC,eAAe,QACZ,eAAe;AAEtB,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,EAAE;EACdC,aAAa,EAAE,EAAE;EACjBC,MAAM,EAAE;AACZ,CAAC;AAED,eAAe,SAASC,OAAOA,CAAA,EAA0C;EAAA,IAAzCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAE;IAAES,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnE,QAAQC,IAAI;IACR,KAAKhB,kBAAkB;MACnB,OAAO;QACH,GAAGY,KAAK;QACRJ,UAAU,EAAE,CAAC,GAAGI,KAAK,CAACH,aAAa,EAAEQ,OAAO,CAAC;QAC7CR,aAAa,EAAE,CAAC,GAAGG,KAAK,CAACH,aAAa,EAAEQ,OAAO;MACnD,CAAC;IACL,KAAKhB,UAAU;MACX,OAAO;QACH,GAAGW,KAAK;QACRF,MAAM,EAAEO;MACZ,CAAC;IACL,KAAKf,qBAAqB;MACtB,OAAO;QACH,GAAGU,KAAK;QACRJ,UAAU,EAAE,CAACS,OAAO;MACxB,CAAC;IACL,KAAKZ,aAAa;MACd,OAAO;QACH,GAAGO,KAAK;QACRJ,UAAU,EAAEI,KAAK,CAACJ,UAAU,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC;MAC5E,CAAC;IACL;IACA,KAAKf,eAAe;MAChB,OAAO;QACH,GAAGM,KAAK;QACRJ,UAAU,EAAEI,KAAK,CAACJ,UAAU,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACI,MAAM,GAAGH,CAAC,CAACG,MAAM;QAC/D;MACJ,CAAC;;IACL,KAAKpB,gBAAgB;MACjB,OAAO;QACH,GAAGS,KAAK;QACRJ,UAAU,EAAEI,KAAK,CAACH,aAAa,CAACe,MAAM,CAACC,SAAS,IAAI;UAChD,MAAMC,MAAM,GAAGD,SAAS,CAACf,MAAM,CAACiB,GAAG,CAACC,KAAK,IAAIA,KAAK,KAAKX,OAAO,CAAC;UAC/D,IAAGS,MAAM,CAACZ,MAAM,EAAE,OAAOW,SAAS,CAAC,KAC9B,OAAO,IAAI;QACpB,CAAC;MACL,CAAC;IACL,KAAKrB,kBAAkB;IAGvB;MACI,OAAO;QAAE,GAAGQ;MAAM,CAAC;EAAA;AAE/B"},"metadata":{},"sourceType":"module"}